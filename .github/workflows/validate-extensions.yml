name: Validate VS Code Extensions

on:
  push:
    paths:
      - "scripts/extensions.txt"
      - "scripts/*.ps1"
  workflow_dispatch:

jobs:
  validate:
    name: "üîç Teste PowerShell-Skripte (Install & Update)"
    runs-on: windows-latest

    steps:
      - name: üì• Repository auschecken
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Stelle VS Code CLI bereit
        shell: pwsh
        run: |
          $possiblePaths = @(
            "C:\Users\runneradmin\AppData\Local\Programs\Microsoft VS Code\bin\code.cmd", # User-Installation (bevorzugt)
            "C:\Program Files\Microsoft VS Code\bin\code.cmd"                             # System-Installation (Fallback)
          )

          $found = $false
          foreach ($p in $possiblePaths) {
            if (Test-Path $p) {
              Write-Host "‚úÖ VS Code CLI gefunden: $p"
              echo (Split-Path $p) | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
              $found = $true
              break
            }
          }

          if (-not $found) {
            Write-Host "‚ö†Ô∏è VS Code CLI nicht gefunden, installiere mit winget..."
            winget install -e --id Microsoft.VisualStudioCode -h
            echo "C:\Program Files\Microsoft VS Code\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          }

          code --version

      - name: üìÑ Zeige Extension-Liste
        shell: pwsh
        run: Get-Content ./scripts/extensions.txt

      - name: ‚ñ∂Ô∏è Teste Install-Skript
        shell: pwsh
        run: ./scripts/Install-Extensions.ps1 -LogFile "$env:TEMP\InstallTest.log"

      - name: ‚ñ∂Ô∏è Teste Update-Skript
        shell: pwsh
        run: ./scripts/Update-Extensions.ps1 -LogFile "$env:TEMP\UpdateTest.log"

      - name: üì¶ Lade Logs als Artefakte hoch
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extensions-logs
          path: ${{ runner.temp }}
